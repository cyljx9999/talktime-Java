server:
  port: 8081
spring:
  profiles:
    #运行的环境
    active: test
  application:
    name: talktime
  datasource:
    url: jdbc:mysql://${talktime.mysql.ip}:${talktime.mysql.port}/${talktime.mysql.db}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: ${talktime.mysql.username}
    password: ${talktime.mysql.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  mvc:
    path match:
      matching-strategy: ANT_PATH_MATCHER
  redis:
    # Redis服务器地址
    host: ${talktime.redis.host}
    # Redis服务器端口号
    port: ${talktime.redis.port}
    # 使用的数据库索引，默认是0
    database: 0
    # 连接超时时间
    timeout: 1800000
    # 设置密码
    password: ${talktime.redis.password}
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
  # rabbitmq配置
  rabbitmq:
    host: ${talktime.rabbitmq.host}
    port: ${talktime.rabbitmq.port}
    username: ${talktime.rabbitmq.username}
    password: ${talktime.rabbitmq.password}
    virtual-host: /
    #开启消息的return机制
    publisher-returns: true
    #在需要使用消息的return机制时候，此参数必须设置为true
    template:
      mandatory: true
    #开启消息的confirm机制
    publisher-confirm-type: correlated
    #开启手动确认
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 100
      direct:
        acknowledge-mode: manual
        prefetch: 100
  servlet:
    # 设置上传文件大小
    multipart:
      max-file-size: 15MB
      max-request-size: 15MB
  jackson:
    serialization:
      write-dates-as-timestamps: true
wx:
  mp:
    callback: ${talktime.wx.callback}
    configs:
      - appId: ${talktime.wx.appId} # 第一个公众号的appid
        secret: ${talktime.wx.secret} # 公众号的appsecret
        token: ${talktime.wx.token} # 接口配置里的Token值
        aesKey: ${talktime.wx.aesKey} # 接口配置里的EncodingAESKey值
alibaba:
  sms:
    accessKeyId: ${alibaba.sms.accessKeyId}
    accessKeySecret: ${alibaba.sms.accessKeySecret}
rsa:
  encrypt:
    open: ${rsa.encrypt.open}
    # RSA公钥 软件生成
    publicKey: ${rsa.encrypt.publicKey}
    # RSA私钥 软件生成
    privateKey: ${rsa.encrypt.privateKey}
    # other用于服务端加密返回
    otherPublicKey: ${rsa.encrypt.otherPublicKey}
    otherPrivateKey: ${rsa.encrypt.otherPrivateKey}
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      #配置mybatis plus 在更新时只更新非空和非NULL的字段
      update-strategy: not_empty
      logic-not-delete-value: 0
      logic-delete-value: 1
      logic-delete-field: isDeleted
  mapper-locations: classpath*:/mapper/**/*.xml

logging:
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger- %msg%n'

# Sa-Token配置
sa-token:
  # token 名称 (同时也是cookie名称)
  token-name: token
  # token 有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token 临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: tik
  # jwt秘钥
  jwt-secret-key: qingmengaslkhdjhfafhab
  # 是否输出操作日志
  is-log: false
  is-print: false
thread:
  pool:
    executor:
        corePoolSize: 10 # 核心线程数量
        maxPoolSize: 30 # 最大线程数量
        queueCapacity: 100 # 队列长度
        keepAliveSeconds: 60 # 存活时间
        prefixName: "talktime-" # 线程名称前缀
